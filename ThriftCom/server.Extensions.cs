/**
 * Autogenerated by Thrift Compiler (0.20.0)
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using Thrift;
using Thrift.Collections;
using Thrift.Protocol;

namespace ThriftCom;

// Thrift code generated for net8
#nullable enable                 // requires C# 8.0
#pragma warning disable IDE0079  // remove unnecessary pragmas
#pragma warning disable IDE0290  // use primary CTOR
#pragma warning disable IDE1006  // parts of the code use IDL spelling
#pragma warning disable CA1822   // empty DeepCopy() methods still non-static

public static class serverExtensions
{
  public static bool Equals(this List<ThriftTrip> instance, object that)
  {
    if (that is not List<ThriftTrip> other) return false;
    if (ReferenceEquals(instance, other)) return true;

    return TCollections.Equals(instance, other);
  }


  public static int GetHashCode(this List<ThriftTrip> instance)
  {
    return TCollections.GetHashCode(instance);
  }


  public static List<ThriftTrip>? DeepCopy(this List<ThriftTrip>? source)
  {
    if (source == null)
      return null;

    var tmp133 = new List<ThriftTrip>(source.Count);
    foreach (var elem in source)
      tmp133.Add(elem.DeepCopy()!);
    return tmp133;
  }


}
